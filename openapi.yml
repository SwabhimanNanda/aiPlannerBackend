openapi: 3.1.0
info:
  title: AiPlannerBackend
  version: 1.0.0
  description: My API Description

servers:
  - url: http://localhost:3001
    description: Local development server
  - url: https://aiplannerbackend.onrender.com
    description: Production server

paths:
  /user/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Registers a user with email and password, and returns an access token and refresh token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegistration"
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: User registered successfully
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                        description: User's email address
                      accessToken:
                        type: string
                        description: JWT access token
        "409":
          description: Conflict - Email already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user/login:
    post:
      tags:
        - Authentication
      summary: Login user
      description: Authenticates user and provides access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: Login successful
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                        description: User's email address
                      accessToken:
                        type: string
                        description: JWT access token
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserRegistration:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          format: password
          description: User's password
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          format: password
          description: User's password
      example:
        email: john.doe@example.com
        password: strongpassword

    Error:
      type: object
      properties:
        status:
          type: string
          example: error
        code:
          type: number
          description: HTTP status code
        message:
          type: string
          description: Error message
        error:
          type: object
          description: Detailed error information (optional)
